
val require-string = provide-string
val provide-roman = ()

exception Roman of string

(* convert a number to roman numerals, for n > 0 *)
fun int-toroman n =
    let
	val ones = n mod 10
	val tens = (n div 10) mod 10
	val hundreds = (n div 100) mod 10
	val thousands = (n div 1000) mod 10

	val ons = ("I", "V", "X")
	val tes = ("X", "L", "C")
	val hus = ("C", "D", "M")
	val ths = ("M", "?", "?")

	fun cvt (n, (c1, c2, c3)) =
	    (case n of
		 0 => ""
	       | 1 => c1
	       | 2 => c1 ^ c1
	       | 3 => c1 ^ c1 ^ c1
	       | 4 => c1 ^ c2
	       | 5 => c2
	       | 6 => c2 ^ c1
	       | 7 => c2 ^ c1 ^ c1
	       | 8 => c2 ^ c1 ^ c1 ^ c1
	       | 9 => c1 ^ c3
	       | _ => raise Roman "impossible")

    in
	if n >= 4000 orelse n <= 0
	then raise Roman "too big"
	else
	    cvt (thousands, ths) ^
	    cvt (hundreds, hus) ^ 
	    cvt (tens, tes) ^
	    cvt (ones, ons)
    end
