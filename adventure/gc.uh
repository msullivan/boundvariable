do mind := rml-load ((Bind ("SERIALNO", (String "A87312")))::(ExternType "int")::(Type ("bool", ("True", nil)::("False", nil)::nil))::(ExternType "string")::(Extern ("string_length", "string"::nil, "int"::nil))::(Extern ("string_charat", "string"::"int"::nil, "int"::nil))::(Extern ("string_fromchar", "int"::nil, "string"::nil))::(FunDecl ("string_concat", ("x", "string")::("y", "string")::nil, SOME "string", (Return (Prim (Cat, (Var "x"), (Var "y"))))))::(Type ("stringlist", ("NoStrings", nil)::("SomeStrings", "string"::"stringlist"::nil)::nil))::(ExternType "room")::(ExternType "item")::(Type ("direction", ("North", nil)::("South", nil)::("East", nil)::("West", nil)::nil))::(Type ("command", ("Go", "direction"::nil)::("Take", "item"::nil)::("Incinerate", "item"::nil)::("Combine", "item"::"item"::nil)::("Break", "item"::nil)::("Drop", "item"::nil)::("Use", "item"::nil)::("Whistle", nil)::("Hum", nil)::("Speak", "string"::nil)::("LookAround", nil)::("ShowInventory", nil)::("Examine", "item"::nil)::nil))::(Type ("datum", ("Atom", "string"::nil)::("Seq", "datum"::"datum"::nil)::("Assoc", "string"::"datum"::"datum"::nil)::("NoData", nil)::nil))::(Extern ("move_self_to_room", "room"::nil, nil))::(Extern ("move_item_to_room", "item"::"room"::nil, nil))::(Extern ("room_name", "room"::nil, "string"::nil))::(Extern ("room_description", "room"::nil, "string"::nil))::(Type ("mayberoom", ("NoRoom", nil)::("SomeRoom", "room"::nil)::nil))::(Extern ("here", nil, "room"::nil))::(Extern ("room_from_name", "string"::nil, "mayberoom"::nil))::(Extern ("neighbor", "room"::"direction"::nil, "mayberoom"::nil))::(Type ("itemlist", ("SomeItems", "item"::"itemlist"::nil)::("NoItems", nil)::nil))::(FunDecl ("itemlist_length", ("items", "itemlist")::nil, SOME "int", (Case ((Var "items"), ("NoItems", nil, (Return (Int 0)))::("SomeItems", "item"::"rest"::nil, (Return (Prim (Add, (Int 1), (Call ("itemlist_length", (Var "rest")::nil))))))::nil))))::(Extern ("room_items", "room"::nil, "itemlist"::nil))::(Extern ("item_name", "item"::nil, "string"::nil))::(Extern ("item_description", "item"::nil, "string"::nil))::(Extern ("item_adjectives", "item"::nil, "stringlist"::nil))::(Extern ("item_portable", "item"::nil, "bool"::nil))::(Extern ("item_equals", "item"::"item"::nil, "bool"::nil))::(ExternType "kind")::(Type ("kindlist", ("NoKinds", nil)::("SomeKinds", "kind"::"kindlist"::nil)::nil))::(FunDecl ("append_kindlists", ("kinds1", "kindlist")::("kinds2", "kindlist")::nil, SOME "kindlist", (Case ((Var "kinds1"), ("NoKinds", nil, (Return (Var "kinds2")))::("SomeKinds", "kind"::"kinds1"::nil, (Return (Construct ("SomeKinds", (false, (Var "kind"))::(false, (Call ("append_kindlists", (Var "kinds1")::(Var "kinds2")::nil)))::nil))))::nil))))::(Type ("condition", ("Pristine", nil)::("Broken", "condition"::"kindlist"::nil)::nil))::(Extern ("kind_name", "kind"::nil, "string"::nil))::(Extern ("kind_condition", "kind"::nil, "condition"::nil))::(Extern ("item_condition", "item"::nil, "condition"::nil))::(Extern ("item_matches_kind", "item"::"kind"::nil, "bool"::nil))::(Extern ("fix_item", "item"::"condition"::nil, nil))::(FunDecl ("direction_tostring", ("d", "direction")::nil, SOME "string", (Case ((Var "d"), ("North", nil, (Return (String "north")))::("East", nil, (Return (String "east")))::("South", nil, (Return (String "south")))::("West", nil, (Return (String "west")))::nil))))::(Bind ("INVENTORY", (Prim (Cat, (String "Inventory"), (Var "SERIALNO")))))::(Bind ("TRASH", (String "Trash Heap")))::(FunDecl ("success_command", ("command", "string")::("details", "datum")::nil, SOME "datum", (Return (Construct ("Assoc", (false, (String "success"))::(false, (Construct ("Assoc", (false, (String "command"))::(false, (Construct ("Assoc", (false, (Var "command"))::(false, (Var "details"))::(false, (Construct ("NoData", nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))))::(FunDecl ("failed_command", ("command", "string")::("details", "datum")::("reason", "string")::nil, SOME "datum", (Return (Construct ("Assoc", (false, (String "failed"))::(false, (Construct ("Assoc", (false, (String "command"))::(false, (Construct ("Assoc", (false, (Var "command"))::(false, (Var "details"))::(false, (Construct ("NoData", nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "reason"))::(false, (Construct ("Atom", (false, (Var "reason"))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))))::(FunDecl ("stringlist_to_datum", ("tag", "string")::("list", "stringlist")::nil, SOME "datum", (Case ((Var "list"), ("NoStrings", nil, (Return (Construct ("NoData", nil))))::("SomeStrings", "s"::"list"::nil, (Return (Construct ("Seq", (false, (Construct ("Assoc", (false, (Var "tag"))::(false, (Construct ("Atom", (false, (Var "s"))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::(false, (Call ("stringlist_to_datum", (Var "tag")::(Var "list")::nil)))::nil))))::nil))))::(FunDecl ("describe_condition", ("c", "condition")::nil, SOME "datum", (Block ((FunDecl ("describe_kindlist", ("list", "kindlist")::nil, SOME "datum", (Block ((FunDecl ("describe_kind", ("e", "kind")::nil, SOME "datum", (Block ((Return (Construct ("Assoc", (false, (String "kind"))::(false, (Construct ("Assoc", (false, (String "name"))::(false, (Construct ("Atom", (false, (Call ("kind_name", (Var "e")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "condition"))::(false, (Call ("describe_condition", (Call ("kind_condition", (Var "e")::nil))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil))))::(Case ((Var "list"), ("NoKinds", nil, (Return (Construct ("NoData", nil))))::("SomeKinds", "kind"::"list"::nil, (Return (Construct ("Seq", (false, (Call ("describe_kind", (Var "kind")::nil)))::(false, (Call ("describe_kindlist", (Var "list")::nil)))::nil))))::nil))::nil))))::(Case ((Var "c"), ("Pristine", nil, (Return (Construct ("Assoc", (false, (String "pristine"))::(false, (Construct ("NoData", nil)))::(false, (Construct ("NoData", nil)))::nil))))::("Broken", "c"::"missing"::nil, (Return (Construct ("Assoc", (false, (String "broken"))::(false, (Construct ("Assoc", (false, (String "condition"))::(false, (Call ("describe_condition", (Var "c")::nil)))::(false, (Construct ("Assoc", (false, (String "missing"))::(false, (Call ("describe_kindlist", (Var "missing")::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil))))::nil))::nil))))::(FunDecl ("describe_items_in_pile", ("items", "itemlist")::nil, SOME "datum", (Case ((Var "items"), ("NoItems", nil, (Return (Construct ("NoData", nil))))::("SomeItems", "item"::"items"::nil, (Return (Construct ("Seq", (false, (Construct ("Assoc", (false, (String "item"))::(false, (Construct ("Assoc", (false, (String "name"))::(false, (Construct ("Atom", (false, (Call ("item_name", (Var "item")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "description"))::(false, (Construct ("Atom", (false, (Call ("item_description", (Var "item")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "adjectives"))::(false, (Call ("stringlist_to_datum", (String "adjective")::(Call ("item_adjectives", (Var "item")::nil))::nil)))::(false, (Construct ("Assoc", (false, (String "condition"))::(false, (Call ("describe_condition", (Call ("item_condition", (Var "item")::nil))::nil)))::(false, (Construct ("Assoc", (false, (String "piled_on"))::(false, (Call ("describe_items_in_pile", (Var "items")::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil)))::nil)))::nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil))))::nil))))::(FunDecl ("describe_items_in_room", ("items", "itemlist")::nil, SOME "datum", (Case ((Var "items"), ("NoItems", nil, (Return (Construct ("NoData", nil))))::("SomeItems", "item'"::"items'"::nil, (Return (Call ("describe_items_in_pile", (Var "items")::nil))))::nil))))::(FunDecl ("describe_item", ("item", "item")::nil, SOME "datum", (Block ((Return (Construct ("Assoc", (false, (String "item"))::(false, (Construct ("Assoc", (false, (String "name"))::(false, (Construct ("Atom", (false, (Call ("item_name", (Var "item")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "description"))::(false, (Construct ("Atom", (false, (Call ("item_description", (Var "item")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "adjectives"))::(false, (Call ("stringlist_to_datum", (String "adjective")::(Call ("item_adjectives", (Var "item")::nil))::nil)))::(false, (Construct ("Assoc", (false, (String "condition"))::(false, (Call ("describe_condition", (Call ("item_condition", (Var "item")::nil))::nil)))::(false, (Construct ("Assoc", (false, (String "piled_on"))::(false, (Construct ("NoData", nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil)))::nil)))::nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil))))::(FunDecl ("describe_items_in_inventory", ("items", "itemlist")::nil, SOME "datum", (Case ((Var "items"), ("NoItems", nil, (Return (Construct ("NoData", nil))))::("SomeItems", "item"::"items"::nil, (Block ((Return (Construct ("Seq", (false, (Call ("describe_item", (Var "item")::nil)))::(false, (Call ("describe_items_in_inventory", (Var "items")::nil)))::nil)))::nil)))::nil))))::(FunDecl ("describe_room", ("room", "room")::nil, SOME "datum", (Return (Construct ("Assoc", (false, (String "room"))::(false, (Construct ("Assoc", (false, (String "name"))::(false, (Construct ("Atom", (false, (Call ("room_name", (Var "room")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "description"))::(false, (Construct ("Atom", (false, (Call ("room_description", (Var "room")::nil)))::nil)))::(false, (Construct ("Assoc", (false, (String "items"))::(false, (Call ("describe_items_in_room", (Call ("room_items", (Var "room")::nil))::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil)))::nil)))::(false, (Construct ("NoData", nil)))::nil)))))::(FunDecl ("hide_item", ("item", "item")::nil, SOME "datum", (Case ((Call ("room_from_name", (Var "TRASH")::nil)), ("NoRoom", nil, (Return (Call ("failed_command", (String "incinerate")::(Call ("describe_item", (Var "item")::nil))::(String "internal error (report for maintenance!)")::nil))))::("SomeRoom", "trash"::nil, (Block ((Do (Call ("move_item_to_room", (Var "item")::(Var "trash")::nil)))::(Return (Call ("success_command", (String "incinerate")::(Call ("describe_item", (Var "item")::nil))::nil)))::nil)))::nil))))::(FunDecl ("hide_items", ("items", "itemlist")::nil, NONE, (Block ((Case ((Var "items"), ("NoItems", nil, (Return Unit))::("SomeItems", "item"::"items"::nil, (Block ((Do (Call ("hide_item", (Var "item")::nil)))::(Do (Call ("hide_items", (Var "items")::nil)))::nil)))::nil))::nil))))::(FunDecl ("combine_items", ("big", "item")::("small", "item")::("flipped", "bool")::nil, SOME "datum", (Case ((Call ("item_condition", (Var "big")::nil)), ("Broken", "condition"::"missing"::nil, (Block ((FunDecl ("find", ("acc", "kindlist")::("kinds", "kindlist")::nil, SOME "datum", (Case ((Var "kinds"), ("NoKinds", nil, (Block ((Case ((Var "flipped"), ("True", nil, (Return (Call ("failed_command", (String "combine")::(Construct ("Seq", (false, (Call ("describe_item", (Var "big")::nil)))::(false, (Construct ("Seq", (false, (Call ("describe_item", (Var "small")::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil))::(String "they don't fit together")::nil))))::("False", nil, (Return (Call ("combine_items", (Var "small")::(Var "big")::(Construct ("True", nil))::nil))))::nil))::nil)))::("SomeKinds", "kind"::"kinds"::nil, (Block ((Case ((Call ("item_matches_kind", (Var "small")::(Var "kind")::nil)), ("True", nil, (Block ((Do (Call ("hide_item", (Var "small")::nil)))::(Bind ("missing", (Call ("append_kindlists", (Var "acc")::(Var "kinds")::nil))))::(Case ((Var "missing"), ("NoKinds", nil, (Do (Call ("fix_item", (Var "big")::(Var "condition")::nil))))::("SomeKinds", "kind'"::"kinds'"::nil, (Do (Call ("fix_item", (Var "big")::(Construct ("Broken", (false, (Var "condition"))::(false, (Var "missing"))::nil))::nil))))::nil))::(Return (Call ("success_command", (String "combine")::(Construct ("Seq", (false, (Call ("describe_item", (Var "big")::nil)))::(false, (Construct ("Seq", (false, (Call ("describe_item", (Var "small")::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil))::nil)))::nil)))::("False", nil, (Block ((Return (Call ("find", (Construct ("SomeKinds", (false, (Var "kind"))::(false, (Var "acc"))::nil))::(Var "kinds")::nil)))::nil)))::nil))::nil)))::nil))))::(Return (Call ("find", (Construct ("NoKinds", nil))::(Var "missing")::nil)))::nil)))::("Pristine", nil, (Block ((Case ((Var "flipped"), ("True", nil, (Return (Call ("failed_command", (String "combine")::(Construct ("Seq", (false, (Call ("describe_item", (Var "big")::nil)))::(false, (Construct ("Seq", (false, (Call ("describe_item", (Var "small")::nil)))::(false, (Construct ("NoData", nil)))::nil)))::nil))::(String "they don't fit together")::nil))))::("False", nil, (Return (Call ("combine_items", (Var "small")::(Var "big")::(Construct ("True", nil))::nil))))::nil))::nil)))::nil))))::(FunDecl ("process", ("c", "command")::nil, SOME "datum", (Case ((Var "c"), ("Go", "d"::nil, (Block ((Bind ("r1", (Call ("here", nil))))::(Case ((Call ("neighbor", (Var "r1")::(Var "d")::nil)), ("NoRoom", nil, (Block ((Bind ("s", (Call ("direction_tostring", (Var "d")::nil))))::(Return (Call ("failed_command", (String "go")::(Construct ("Atom", (false, (Var "s"))::nil))::(Prim (Cat, (Prim (Cat, (String "there is no way "), (Var "s"))), (String " from here")))::nil)))::nil)))::("SomeRoom", "r2"::nil, (Block ((Do (Call ("move_self_to_room", (Var "r2")::nil)))::(Return (Call ("success_command", (String "go")::(Call ("describe_room", (Var "r2")::nil))::nil)))::nil)))::nil))::nil)))::("Take", "item"::nil, (Block ((Case ((Call ("room_from_name", (Var "INVENTORY")::nil)), ("NoRoom", nil, (Return (Call ("failed_command", (String "take")::(Call ("describe_item", (Var "item")::nil))::(String "internal error (report for maintenance!)")::nil))))::("SomeRoom", "inventory"::nil, (Block ((Case ((Call ("item_portable", (Var "item")::nil)), ("True", nil, (Block ((Bind ("items", (Call ("room_items", (Var "inventory")::nil))))::(Case ((Call ("room_items", (Call ("here", nil))::nil)), ("NoItems", nil, (Return (Call ("failed_command", (String "take")::(Call ("describe_item", (Var "item")::nil))::(String "internal error (report for maintenance!)")::nil))))::("SomeItems", "item'"::"items'"::nil, (Block ((Case ((Call ("item_equals", (Var "item")::(Var "item'")::nil)), ("True", nil, (Block ((Case ((Prim (GreaterEquals, (Call ("itemlist_length", (Var "items")::nil)), (Int 6))), ("True", nil, (Return (Call ("failed_command", (String "take")::(Call ("describe_item", (Var "item")::nil))::(String "you can't carry any more items")::nil))))::("False", nil, (Block ((Do (Call ("move_item_to_room", (Var "item")::(Var "inventory")::nil)))::(Return (Call ("success_command", (String "take")::(Call ("describe_item", (Var "item")::nil))::nil)))::nil)))::nil))::nil)))::("False", nil, (Return (Call ("failed_command", (String "take")::(Call ("describe_item", (Var "item")::nil))::(String "there is another item on top of it (take the other item first)")::nil))))::nil))::nil)))::nil))::nil)))::("False", nil, (Return (Call ("failed_command", (String "take")::(Call ("describe_item", (Var "item")::nil))::(String "it's impossible to do so")::nil))))::nil))::nil)))::nil))::nil)))::("Incinerate", "item"::nil, (Block ((Return (Call ("hide_item", (Var "item")::nil)))::nil)))::("Combine", "item1"::"item2"::nil, (Block ((Return (Call ("combine_items", (Var "item1")::(Var "item2")::(Construct ("False", nil))::nil)))::nil)))::("Break", "item"::nil, (Block ((Return (Call ("failed_command", (String "break")::(Call ("describe_item", (Var "item")::nil))::(String "you can't bring yourself to do it")::nil)))::nil)))::("Drop", "item"::nil, (Block ((Return (Call ("failed_command", (String "drop")::(Call ("describe_item", (Var "item")::nil))::(String "you can't bring yourself to part with it")::nil)))::nil)))::("Use", "item"::nil, (Block ((Case ((Call ("item_condition", (Var "item")::nil)), ("Pristine", nil, (Block ((Case ((Prim (Equals, (Call ("item_name", (Var "item")::nil)), (String "keypad"))), ("True", nil, (Block ((Case ((Prim (Equals, (Call ("room_name", (Call ("here", nil))::nil)), (String "Room With a Door"))), ("True", nil, (Block ((Case ((Call ("room_from_name", (String "54th Street and Ridgewood Court")::nil)), ("NoRoom", nil, (Return (Call ("failed_command", (String "use")::(Call ("describe_item", (Var "item")::nil))::(String "internal error (report for maintenance!)")::nil))))::("SomeRoom", "r"::nil, (Block ((Do (Call ("move_self_to_room", (Var "r")::nil)))::(Return (Call ("success_command", (String "use")::(Construct ("Seq", (false, (Call ("describe_item", (Var "item")::nil)))::(false, (Construct ("Atom", (false, (Prim (Cat, (Prim (Cat, (Prim (Cat, (String "You unlock and open the door. Passing through, "), (String "you find yourself on the streets of Chicago. "))), (String "Seeing no reason you should ever go back, you "))), (String "allow the door to close behind you. "))))::nil)))::nil))::nil)))::nil)))::nil))::nil)))::("False", nil, (Block ((Return (Call ("failed_command", (String "use")::(Call ("describe_item", (Var "item")::nil))::(String "you see no way to use it in this room")::nil)))::nil)))::nil))::nil)))::("False", nil, (Block ((Return (Call ("failed_command", (String "use")::(Call ("describe_item", (Var "item")::nil))::(String "nothing interesting happens")::nil)))::nil)))::nil))::nil)))::("Broken", "c"::"m"::nil, (Return (Call ("failed_command", (String "use")::(Call ("describe_item", (Var "item")::nil))::(Prim (Cat, (Prim (Cat, (String "the "), (Call ("item_name", (Var "item")::nil)))), (String " is broken")))::nil))))::nil))::nil)))::("Whistle", nil, (Return (Call ("success_command", (String "whistle")::(Construct ("NoData", nil))::nil))))::("Hum", nil, (Return (Call ("success_command", (String "hum")::(Construct ("NoData", nil))::nil))))::("Speak", "s"::nil, (Return (Call ("success_command", (String "speak")::(Construct ("Atom", (false, (Var "s"))::nil))::nil))))::("LookAround", nil, (Return (Call ("success_command", (String "look")::(Call ("describe_room", (Call ("here", nil))::nil))::nil))))::("ShowInventory", nil, (Block ((Case ((Call ("room_from_name", (Var "INVENTORY")::nil)), ("NoRoom", nil, (Return (Call ("failed_command", (String "show")::(Construct ("NoData", nil))::(String "internal error (report for maintenance!)")::nil))))::("SomeRoom", "inventory"::nil, (Block ((Bind ("items", (Call ("room_items", (Var "inventory")::nil))))::(Return (Call ("success_command", (String "show")::(Call ("describe_items_in_inventory", (Var "items")::nil))::nil)))::nil)))::nil))::nil)))::("Examine", "item"::nil, (Block ((Return (Call ("success_command", (String "examine")::(Call ("describe_item", (Var "item")::nil))::nil)))::nil)))::nil))))::nil)
